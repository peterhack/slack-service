sudo: true
dist: trusty
language: java
services:
- docker
before_install:
- export TZ=Europe/Vienna
- IMAGE=keptn/slack-service
- REGISTRY_USER=dirkwallerstorfer
- VERSION="$(cat version | tr -d '[:space:]')"
- DATE="$(date +'%Y%m%d.%H%M')"
- GIT_SHA="$(git rev-parse --short HEAD)"
- echo "$REGISTRY_PASSWORD" | docker login --username $REGISTRY_USER --password-stdin
- ./writeManifest.sh
- cat MANIFEST
- wget https://product-dist.ballerina.io/downloads/0.991.0/ballerina-linux-installer-x64-0.991.0.deb
- sudo dpkg -i ballerina-linux-installer-x64-0.991.0.deb
- ballerina test slack-service.bal
jobs:
  include:
  - stage: feature/bug/hotfix
    if: branch =~ ^feature.*$ OR branch =~ ^bug.*$ OR branch =~ ^hotfix.*$
    script:
    - echo $TRAVIS_BUILD_STAGE_NAME
    - TYPE="$(echo $TRAVIS_BRANCH | cut -d'/' -f1)"
    - NUMBER="$(echo $TRAVIS_BRANCH | cut -d'/' -f2)"
    - docker build . -t "${IMAGE}:${GIT_SHA}"
    - docker tag "${IMAGE}:${GIT_SHA}" "${IMAGE}:${TYPE}.${NUMBER}.${DATE}"
    - docker push "${IMAGE}:${GIT_SHA}"
    - docker push "${IMAGE}:${TYPE}.${NUMBER}.${DATE}"
  - stage: develop
    if: branch = develop AND NOT type = pull_request
    script:
    - echo $TRAVIS_BUILD_STAGE_NAME
    - docker build . -t "${IMAGE}:${GIT_SHA}"
    - docker tag "${IMAGE}:${GIT_SHA}" "${IMAGE}:${DATE}"
    - docker tag "${IMAGE}:${GIT_SHA}" "${IMAGE}:latest"
    - docker push "${IMAGE}:${GIT_SHA}"
    - docker push "${IMAGE}:${DATE}"
    - docker push "${IMAGE}:latest"
  - stage: release-branch
    if: branch =~ ^release.*$ AND NOT type = pull_request
    script:
    - echo $TRAVIS_BUILD_STAGE_NAME
    - docker build . -t "${IMAGE}:${GIT_SHA}"
    - docker tag "${IMAGE}:${GIT_SHA}" "${IMAGE}:${VERSION}.${DATE}"
    - docker tag "${IMAGE}:${GIT_SHA}" "${IMAGE}:${VERSION}.latest"
    - docker push "${IMAGE}:${GIT_SHA}"
    - docker push "${IMAGE}:${VERSION}.${DATE}"
    - docker push "${IMAGE}:${VERSION}.latest"
  - stage: master
    if: branch = master AND NOT type = pull_request
    script:
    - echo $TRAVIS_BUILD_STAGE_NAME
    - docker build . -t "${IMAGE}:${VERSION}"
    - docker push "${IMAGE}:${VERSION}"